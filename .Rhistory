colors = c("green","orange","brown","blue")
# 20BCE0480-Atharva Parkale
colors = c("green","orange","brown","blue")
rollno <- c("1","2","3","4","5","6","7","8","9","10")
exams <- c("Cat-1","Cat-2","Final","Total")
Values <- matrix(c(7,8,11,6,14,11,13,3,1,12,8,9,13,9,7,2,5,15,9,7,44,60,45,15,56,60,10,70,20,42,59,77,69,30,77,73,28,88,30,61), nrow = 4, ncol = 10, byrow = TRUE)
# Stacked bar chart
barplot(Values, main = "Marks of 10 students", names.arg = rollno, xlab = "marks", ylab = "Roll No", col = colors)
barplot(Values, main = "Marks of 10 students", names.arg = rollno, xlab = "Roll No", ylab = "Marks", col = colors ,beside=TRUE)
legend("topleft", exams, cex = 1, fill = colors)
barplot(Values, main = "Marks of 10 students (20BCE0480)", names.arg = rollno, xlab = "Roll No", ylab = "Marks", col = colors ,beside=TRUE)
# 20BCE0480-Atharva Parkale
colors = c("green","orange","brown","blue")
rollno <- c("1","2","3","4","5","6","7","8","9","10")
exams <- c("Cat-1","Cat-2","Final","Total")
Values <- matrix(c(7,8,11,6,14,11,13,3,1,12,8,9,13,9,7,2,5,15,9,7,44,60,45,15,56,60,10,70,20,42,59,77,69,30,77,73,28,88,30,61), nrow = 4, ncol = 10, byrow = TRUE)
# Stacked bar chart
barplot(Values, main = "Marks of 10 students", names.arg = rollno, xlab = "marks", ylab = "Roll No", col = colors)
barplot(Values, main = "Marks of 10 students ( 20BCE0480 )", names.arg = rollno, xlab = "Roll No", ylab = "Marks", col = colors ,beside=TRUE)
legend("topleft", exams, cex = 1, fill = colors)
install.packages("iswr")
install.packages("ISwR")
thuesen
library("ISwR")
install.packages("ISwR")
thuesen
?thuesen
?thuesen
thuesen
install.packages("ISwR")
install.packages(c("cpp11", "data.table", "digest", "e1071", "Hmisc", "hms", "htmltools", "htmlwidgets", "insight", "knitr", "lifecycle", "maptools", "matrixStats", "mime", "openssl", "pillar", "R6", "RcppArmadillo", "readr", "rgl", "rJava", "stringi", "tibble", "tidyr", "vroom", "xfun"))
thuesen
thuesen
attach(thuesen)
cor(blood.glucose,short.velocity,use="complete.obs")
install.packages("ISwR")
thuesen
getwd()
getwd()
fortune <-read.csv("fortune1000.csv",TRUE,",")
class(fortune)
head(fortune)
#1. Create a Data Frame from the file.
getwd()
fortune <-read.csv("fortune1000.csv",TRUE,",")
class(fortune)
head(fortune)
#1. Create a Data Frame from the file.
getwd()
fortune <-read.csv("fortune1000.csv",TRUE,",")
class(fortune)
head(fortune)
#1. Create a Data Frame from the file.
getwd()
fortune <-read.csv("fortune1000.csv",TRUE,",")
class(fortune)
print(fortune)
#1. Create a Data Frame from the file.
getwd()
fortune <-read.csv("fortune1000.csv")
class(fortune)
head(fortune)
print(fortune)
max.print(fortune)
#1. Create a Data Frame from the file.
getwd()
fortune <-read.csv("fortune1000.csv")
class(fortune)
v1 <- fortune[[1]]
print(v1)
unique(fortune[c(v1)])
print(v1)
print(fortune)
unique(df[c("Sector")])
unique(fortune[c("Sector")])
getwd()
getwd()
getwd()
getwd()
getwd()
x<-read.csv("matrix_data.csv",header=TRUE,sep=",")
getwd()
x<-read.csv("matrix_data.csv",header=TRUE,sep=",")
x
my_matrix<- as.matrix(x)
my_matrix
x
#Stacked bar chart
# Create the input vectors.
colors = c("green","orange","brown")
months <- c("Mar","Apr","May","Jun","Jul")
regions <- c("East","West","North")
# Create the matrix of the values.
Values <- matrix(c(2,9,3,11,9,4,8,7,3,12,5,2,8,10,11), nrow = 3, ncol = 5, byrow = TRUE)
my_matrix<- as.matrix(x, bycol = TRUE)
my_matrix
Values
Values <- my_matrix
Values
# Create the matrix of the values.
Values <- matrix(c(2,9,3,11,9,4,8,7,3,12,5,2,8,10,11), nrow = 3, ncol = 5, byrow = TRUE)
# Stacked bar chart
barplot(Values, main = "total revenue", names.arg = months, xlab = "month", ylab = "revenue", col = colors)
# Add the legend to the chart
legend("topleft", regions, cex = 1, fill = colors)
#Stacked bar chart
# Create the input vectors.
colors = c("green","orange","brown")
months <- c("Mar","Apr","May")
regions <- c("Cases","Recovered","Present")
Values <- my_matrix
Values
# Stacked bar chart
barplot(Values, main = "total revenue", names.arg = months, xlab = "month", ylab = "revenue", col = colors)
x<-read.csv("matrix_data.csv",header=TRUE,sep=",")
x
my_matrix<- as.matrix(x, byrow = FALSE)
my_matrix
#Stacked bar chart
# Create the input vectors.
colors = c("green","orange","brown")
months <- c("Mar","Apr","May")
regions <- c("Cases","Recovered","Present")
Values <- my_matrix
Values
# Stacked bar chart
barplot(Values, main = "total revenue", names.arg = months, xlab = "month", ylab = "revenue", col = colors)
my_matrix<- as.matrix(x, nrow=3,ncol=3,byrow = FALSE)
my_matrix
#Stacked bar chart
# Create the input vectors.
colors = c("green","orange","brown")
months <- c("Mar","Apr","May")
regions <- c("Cases","Recovered","Present")
Values <- my_matrix
Values
# Stacked bar chart
barplot(Values, main = "total revenue", names.arg = months, xlab = "month", ylab = "revenue", col = colors)
# Add the legend to the chart
legend("topleft", regions, cex = 1, fill = colors)
my_matrix<- as.matrix(x)
my_matrix
#Stacked bar chart
# Create the input vectors.
colors = c("green","orange","brown")
months <- c("Mar","Apr","May")
regions <- c("Cases","Recovered","Present")
Values <- my_matrix
Values
# Stacked bar chart
barplot(Values, main = "total revenue", names.arg = months, xlab = "month", ylab = "revenue", col = colors)
install.packages("flexdashboard")
install.packages("DT")
rmarkdown::render("practice dashboard.Rmd")
getwd()
rmarkdown::render("practice_dashboard.Rmd")
rmarkdown::render("practice_dashboard.Rmd")
rmarkdown::render("practice_dashboard.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/practice_dashboard.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/practice_dashboard.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/practice_dashboard.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/practice_dashboard.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/newProject.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/newProject.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/newProject.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/newProject.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/newProject.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/newProject.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/newProject.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/newProject.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/newProject.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/newProject.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/newProject.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/newProject.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/newProject.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/newProject.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/newProject.Rmd")
install.packages("tidyverse")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/newProject.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/newProject.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/newProject.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/newProject.Rmd")
install.packages("shiny")
library(shiny)
getwd()
w <-read.csv("assists1.csv")
getwd()
setwd("C:/Users/athar/Desktop/ZER01")
w <-read.csv("assists1.csv")
w
w <-read.csv("assists_wins.csv")
w
color.function <- colorRampPalette( c( "#CCCCCC" , "#104E8B" ) )
rmarkdown::render("C:/Users/athar/Desktop/ZER01/newProject.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
plot(wt,mpg,main="Scatterplot example",xlab="car weight",ylab="miles per gallon",pch=25,cex.main=2.5,cex.axis=0.5,cex.label=1.5)
w <-read.csv("assists_wins.csv")
w
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=25,
cex.main=w$Wins/50,
cex.axis=0.5,
cex.label=1.5)
w <-read.csv("assists_wins.csv")
w
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=25,
cex=w$Wins/50,
cex.axis=0.5,
cex.label=1.5)
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=25,
cex=w$Wins,
cex.axis=0.5,
cex.label=1.5)
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=25,
cex=w$Wins,
cex.axis=0.5,
cex.label=1.5,
pch=19)
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=25,
cex=w$Wins,
cex.axis=0.5,
cex.label=1.5,
pch=21)
plot(w$Assists,
w$Goals,
pch=21,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=25,
cex=w$Wins,
cex.axis=0.5,
cex.label=1.5)
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=19,
cex=w$Wins,
cex.axis=0.5,
cex.label=1.5)
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=19,
cex=w$Wins/4,
cex.axis=0.5,
cex.label=1.5)
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=19,
cex=w$Wins/5,
cex.axis=0.5,
cex.label=1.5)
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=19,
cex=w$Wins/7,
cex.axis=0.5,
cex.label=1.5)
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=19,
cex=w$Wins/8,
cex.axis=0.5,
cex.label=1.5)
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=19,
cex=w$Wins/9,
cex.axis=0.5,
cex.label=1.5)
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=19,
cex=w$Wins/9,
cex.axis=0.5,
cex.label=1.5,
col=rainbow(10))
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=19,
cex=w$Wins/9,
cex.axis=1.5,
cex.label=1.5,
col=rainbow(10))
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=19,
cex=w$Wins/9,
cex.axis=1.5,
cex.label=2,
col=rainbow(10))
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=19,
cex=w$Wins/9,
cex.axis=1.5,
cex.label=2,
col=rainbow(10))
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=19,
cex=w$Wins/9,
cex.axis=1.5,
cex.label=1.5,
col=rainbow(10))
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=19,
cex=w$Wins/9,
cex.axis=1.5,
cex.label=1.5,
col=rainbow(10))
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=19,
cex=w$Wins/9,
cex.axis=1.5,
cex.label=1,
col=rainbow(10))
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=19,
cex=w$Wins/9,
cex.axis=1.5,
cex.label=0.9,
col=rainbow(10))
w <-read.csv("assists1.csv")
w <-read.csv("assists1.csv")
w
w <-read.csv("assists_wins.csv")
w
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=19,
cex=w$Wins/9,
cex.axis=1.5,
cex.label=0.9,
col=rainbow(10))
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=19,
cex=w$Wins/9,
cex.axis=1.5,
col=rainbow(10))
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=19,
cex=w$Wins/9,
cex.axis=1.5,
col=rainbow(10))
w
w <-read.csv("assists_wins.csv")
w
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=19,
cex=w$Wins/9,
cex.axis=1.5,
col=rainbow(10))
plot(w$Assists,
w$Goals,
main="Scatterplot example",
xlab="car weight",
ylab="miles per gallon",
pch=19,
cex=w$Wins/9,
cex.axis=1.5,
col=rainbow(10))
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
w <-read.csv("assists1.csv")
w
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
w <-read.csv("passes_wins.csv")
w
w
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
init<-par(no.readonly = TRUE)
par(mfrow=c(2,2))
plot(mpg,wt)
#Shape property (pch)
attach(mtcars)
plot(wt,mpg,main="Scatterplot example",xlab="car weight",ylab="miles per gallon",pch=19)
plot(wt,mpg,main="Scatterplot example",xlab="car weight",ylab="miles per gallon",pch=25)
#Color property (col)
plot(wt,mpg,main="Scatterplot example",xlab="car weight",ylab="miles per gallon",col="pink",pch=25,col.main="red",col.axis="blue",col.lab="green",fg="grey")
#Changing the style of title and label Title (cex)
plot(wt,mpg,main="Scatterplot example",xlab="car weight",ylab="miles per gallon",pch=25,cex.main=2.5,cex.axis=0.5,cex.label=1.5)
init<-par(no.readonly = TRUE)
par(mfrow=c(2,2))
plot(mpg,wt)
plot(mpg,disp)
#Stacked bar chart
# Create the input vectors.
colors = c("green","orange","brown")
w <-read.csv("fouls_cards.csv")
W
w
Values <- matrix(c(w$Red.Cards,w$Yellow.Cards), nrow = 3, ncol = 5, byrow = TRUE)
Values <- matrix(c(2,9,3,11,9,4,8,7,3,12,5,2,8,10,11), nrow = 3, ncol = 5, byrow = TRUE)
Values
Values <- matrix(c(2,1,3,1,5,7,6,1,3,8,5,3,1,2,8,7,4,8,7,9), nrow = 2, ncol = 10, byrow = TRUE)
Values
barplot(Values, main = "Red and Yellow cards", names.arg = w$Club, xlab = "Club", ylab = "Number of cards", col = colors)
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
rmarkdown::render("C:/Users/athar/Desktop/ZER01/project.Rmd")
